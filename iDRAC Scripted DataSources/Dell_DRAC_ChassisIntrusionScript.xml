<?xml version="1.0" encoding="UTF-8" ?>
<feed  version="1.0" hasPendingRequests="false" >
  <company></company>
  <status>200</status>
  <errmsg>OK</errmsg>
  <interval>0</interval>
    <entry type="predatasource">
        <version>1601306979</version>
        <name>Dell_DRAC_ChassisIntrusionScript</name>
        <displayedas>Dell_DRAC_ChassisIntrusion</displayedas>
        <description>status of chassis intrusion sensor for iDRAC7 and newer that supports SNMP</description>
        <collector>script</collector>
        <hasMultiInstances>true</hasMultiInstances>
        <schedule>300</schedule>
        <appliesTo>(idrac.ip)</appliesTo>
        <wildcardauto>true</wildcardauto>
        <wildcardpersist>false</wildcardpersist>
        <wildcardlinuxscript>ad_script</wildcardlinuxscript>
        <wildcardlinuxcmdline>type=&#34;embeded&#34; </wildcardlinuxcmdline>
        <wildcardwinscript>ad_script</wildcardwinscript>
        <wildcardwincmdline>type=&#34;embeded&#34; </wildcardwincmdline>
        <wildcardgroovyscript>import com.santaba.agent.groovyapi.expect.Expect;
import com.santaba.agent.groovyapi.snmp.Snmp;
import com.santaba.agent.groovyapi.http.*;
import com.santaba.agent.groovyapi.jmx.*;
import org.xbill.DNS.*;

def ip = hostProps.get(&#34;idrac.ip&#34;);
def oid=&#34;.1.3.6.1.4.1.674.10892.5.4.300.70.1.8.1&#34;
// walk the oid tree
def snmp_walk = Snmp.walk(ip, oid);




// iterate over each line returned by the oid tree
snmp_walk.eachLine 
{ line -&#62;
line=line.replace(oid+&#39;.&#39;,&#39;&#39;)

    // tokenize the line, separating the leaf oid from its value
    tokens = line.split(/ = /, 2);

    // print the value
    println tokens[0]+&#34;##&#34;+tokens[1]
}

// return with a response code that indicates we ran successfully
return (0);</wildcardgroovyscript>
        <wildcardschedule>1440</wildcardschedule>
        <wildcarddisable>false</wildcarddisable>
        <wildcarddeleteinactive>true</wildcarddeleteinactive>
        <agdmethod>none</agdmethod>
        <agdparams></agdparams>
        <group>Dell_DRAC</group>
        <tags></tags>
        <technology></technology>
        <adlist><![CDATA[{"agdmethod":"none","method":"ad_script","agdparams":"","id":0,"filters":[],"params":{"type":"embeded","groovyscript":"import com.santaba.agent.groovyapi.expect.Expect;\nimport com.santaba.agent.groovyapi.snmp.Snmp;\nimport com.santaba.agent.groovyapi.http.*;\nimport com.santaba.agent.groovyapi.jmx.*;\nimport org.xbill.DNS.*;\n\ndef ip = hostProps.get(\"idrac.ip\");\ndef oid=\".1.3.6.1.4.1.674.10892.5.4.300.70.1.8.1\"\n// walk the oid tree\ndef snmp_walk = Snmp.walk(ip, oid);\n\n\n\n\n// iterate over each line returned by the oid tree\nsnmp_walk.eachLine \n{ line ->\nline=line.replace(oid+'.','')\n\n    // tokenize the line, separating the leaf oid from its value\n    tokens = line.split(/ = /, 2);\n\n    // print the value\n    println tokens[0]+\"##\"+tokens[1]\n}\n\n// return with a response code that indicates we ran successfully\nreturn (0);"}}]]></adlist>
        <schemaVersion>2</schemaVersion>
        <dataSourceType>1</dataSourceType>
        <attributes>
        <attribute>
            <name>scripttype</name>
            <value>embed</value>
            <comment></comment>
        </attribute>
        <attribute>
            <name>scriptgroovy</name>
            <value>import com.santaba.agent.groovyapi.expect.Expect;
import com.santaba.agent.groovyapi.snmp.Snmp;
import com.santaba.agent.groovyapi.http.*;
import com.santaba.agent.groovyapi.jmx.*;
import org.xbill.DNS.*;

def ip = hostProps.get(&#34;idrac.ip&#34;);

// walk the oid tree
def IntrusionReading= Snmp.get(ip, &#34;.1.3.6.1.4.1.674.10892.5.4.300.70.1.6.1.&#34;+&#34;##WILDVALUE##&#34;);
println &#34;IntrusionReading=&#34;+IntrusionReading





// return with a response code that indicates we ran successfully
return (0);</value>
            <comment></comment>
        </attribute>
        <attribute>
            <name>windowsscript</name>
            <value></value>
            <comment></comment>
        </attribute>
        <attribute>
            <name>linuxscript</name>
            <value></value>
            <comment></comment>
        </attribute>
        <attribute>
            <name>windowscmdline</name>
            <value></value>
            <comment></comment>
        </attribute>
        <attribute>
            <name>linuxcmdline</name>
            <value></value>
            <comment></comment>
        </attribute>
        </attributes>
        <datapoints>
        <datapoint>
            <name>IntrusionReading</name>
            <dataType>7</dataType>
            <type>2</type>
            <postprocessormethod>namevalue</postprocessormethod>
            <postprocessorparam>IntrusionReading</postprocessorparam>
            <usevalue>output</usevalue>
             <alertexpr>&#62; 2</alertexpr>
            <alertmissing>1</alertmissing>
            <alertsubject></alertsubject>
            <alertbody>The DRAC on ##HOST## is reporting a status code of ##VALUE## for the chassis breach sensor ##INSTANCE##, which puts this device in ##LEVEL## state. This started at ##START## - or ##DURATION## ago.

DRAC intrusion sensor status codes are as follows:
1: chassis not breached
2: chassis breached
3: chassis breached prior
4: chassis breach sensor failure</alertbody>
            <enableanomalyalertsuppression></enableanomalyalertsuppression>
            <adadvsettingenabled>false</adadvsettingenabled>
            <warnadadvsetting></warnadadvsetting>
            <erroradadvsetting></erroradadvsetting>
            <criticaladadvsetting></criticaladadvsetting>
            <description>the chassis intrusion state as monitored by the remote access card; status codes 1=chassis not breached, 2=chassis breached, 3=chassis breached prior, 4=chassis breach sensor failure</description>
            <maxvalue></maxvalue>
            <minvalue></minvalue>
            <userparam1></userparam1>
            <userparam2></userparam2>
            <userparam3></userparam3>
            <iscomposite>false</iscomposite>
            <rpn></rpn>
            <alertTransitionIval>0</alertTransitionIval>
            <alertClearTransitionIval>0</alertClearTransitionIval>
        </datapoint>
        </datapoints>
        <graphs>
        <graph>
            <name>Chassis Intrusion Status</name>
            <title>Chassis Intrusion Status</title>
            <verticallabel>status code - 1=ok</verticallabel>
            <rigid>true</rigid>
            <maxvalue>5.0</maxvalue>
            <minvalue>0.0</minvalue>
            <displayprio>1</displayprio>
            <timescale>1day</timescale>
            <base1024>false</base1024>
            <graphdatapoints>
        <graphdatapoint>
            <name>IntrusionReading</name>
            <datapointname>IntrusionReading</datapointname>
            <cf>1</cf>
        </graphdatapoint>
            </graphdatapoints>
            <graphvirtualdatapoints>
            </graphvirtualdatapoints>
            <graphdatas>
            <graphdata>
                <type>1</type>
                <legend>Intrusion Reading</legend>
                <color>blue</color>
                <datapointname>IntrusionReading</datapointname>
                <isvirtualdatapoint>false</isvirtualdatapoint>
            </graphdata>
            </graphdatas>
        </graph>
        </graphs>
        <overviewgraphs>
        <overviewgraph>
            <name>Chassis Intrusion Status Overview</name>
            <title>Chassis Intrusion Status Overview</title>
            <verticallabel>status code - 1=ok</verticallabel>
            <rigid>false</rigid>
            <maxvalue>5.0</maxvalue>
            <minvalue>0.0</minvalue>
            <displayprio>1</displayprio>
            <timescale>1day</timescale>
            <base1024>false</base1024>
            <aggregated>false</aggregated>
            <datapoints>
        <overviewgraphdatapoint>
            <name>IntrusionReading</name>
            <datapointname>IntrusionReading</datapointname>
            <cf>1</cf>
            <aggregateMethod>sum</aggregateMethod>
        </overviewgraphdatapoint>
            </datapoints>
            <virtualdatapoints>
            </virtualdatapoints>
            <lines>
            <overviewgraphline>
                <type>1</type>
                <legend>##INSTANCE##</legend>
                <datapointname>IntrusionReading</datapointname>
                <isvirtualdatapoint>false</isvirtualdatapoint>
                <color>blue</color>
            </overviewgraphline>
            </lines>
        </overviewgraph>
        </overviewgraphs>
        <scripts>
        </scripts>
    </entry>
</feed>
